// src/controllers/commandeController.js

// Exemple de donn√©es fictives pour simuler une base de donn√©es
let commandes = [];
let idCounter = 1;

// üìå Cr√©er une nouvelle commande fournisseur
exports.createCommande = (req, res) => {
  const nouvelleCommande = {
    idCommandeFournisseur: idCounter++,
    ...req.body,
    statutCommande: 'en attente',
    dateCommande: new Date(),
  };
  commandes.push(nouvelleCommande);
  res.status(201).json({ message: 'Commande cr√©√©e avec succ√®s', commande: nouvelleCommande });
};

// üìÑ Obtenir toutes les commandes
exports.getAllCommandes = (req, res) => {
  res.json(commandes);
};

// üîç Obtenir une commande par ID
exports.getCommandeById = (req, res) => {
  const commande = commandes.find(cmd => cmd.idCommandeFournisseur == req.params.id);
  if (!commande) {
    return res.status(404).json({ message: 'Commande non trouv√©e' });
  }
  res.json(commande);
};

// ‚úèÔ∏è Mettre √† jour une commande (par ex. modifier la date ou le fournisseur)
exports.updateCommande = (req, res) => {
  const commande = commandes.find(cmd => cmd.idCommandeFournisseur == req.params.id);
  if (!commande) {
    return res.status(404).json({ message: 'Commande non trouv√©e' });
  }
  Object.assign(commande, req.body);
  res.json({ message: 'Commande mise √† jour', commande });
};

// üöö Confirmer la livraison d'une commande
exports.confirmerLivraison = (req, res) => {
  const commande = commandes.find(cmd => cmd.idCommandeFournisseur == req.params.id);
  if (!commande) {
    return res.status(404).json({ message: 'Commande non trouv√©e' });
  }
  commande.statutCommande = 'livr√©e';
  commande.dateLivraisonEffective = new Date();
  res.json({ message: 'Livraison confirm√©e', commande });
};

// ‚ùå Supprimer une commande
exports.deleteCommande = (req, res) => {
  const index = commandes.findIndex(cmd => cmd.idCommandeFournisseur == req.params.id);
  if (index === -1) {
    return res.status(404).json({ message: 'Commande non trouv√©e' });
  }
  commandes.splice(index, 1);
  res.json({ message: 'Commande supprim√©e avec succ√®s' });
};
